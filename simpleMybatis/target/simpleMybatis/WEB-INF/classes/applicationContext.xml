<?xml version="1.0" encoding="UTF-8"?>

<!--spring 的核心配置文件，它整合了 Spring mvc 和 mybatis ，并配置了数据库的持久化-->

<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-4.2.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
>
    <!-- 自动扫描有 Spring 相关注解的类，并把这些类注册为 bean -->
    <context:component-scan base-package="com.ssm" />
    <!-- 配置数据源 (与通过JDBC连接数据库原理相同）-->
    <bean
            id="dataSource"
            class="org.springframework.jdbc.datasource.DriverManagerDataSource"
    >
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <!--useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&amp;-->
        <property
                name="url"
                value="jdbc:mysql://localhost:3306/examplemybatis?serverTimezone=UTC&amp;characterEncoding=utf8"
        />

        <property name="username" value="root" />
        <property name="password" value="wuwenqin" />
    </bean>
    <!-- MyBatis 的 SqlSession 的工厂，并引用数据源，扫描 MyBatis 的配置文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

    <!-- MyBatis 自动扫描加载 Sql 映射文件/接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ssm.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    <!-- JDBC 事务管理器 -->
    <bean
            id="txManager"
            class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    >
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--配置事务通知(advice) -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="add" propagation="REQUIRED"/>
            <tx:method name="insert" propagation="REQUIRED"/>
            <tx:method name="remove" propagation="REQUIRED"/>
            <tx:method name="delete" propagation="REQUIRED"/>
            <tx:method name="update" propagation="REQUIRED"/>
            <tx:method name="query" read-only="true"/>
            <tx:method name="find" read-only="true"/>
            <tx:method name="select" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--事务织入-->
    <aop:config>
        <aop:advisor advice-ref="txAdvice"  pointcut="execution(* com.ssm.service.*.*(..))"/>
    </aop:config>

    <!-- 启用支持 annotation 注解方式事务管理 -->
    <tx:annotation-driven transaction-manager="txManager" />
</beans>